version: "3"

services:
    nginx:
        image: nginx
        restart: always
        ports:
            - "8080:8080"
        volumes:
            - ./config/nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - gunicorn

    redis:
        image: redis
        restart: always
        command: redis-server
        expose:
            - "6379"

    gunicorn:
        build: 
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        command: bash -c "venv/bin/gunicorn --workers 4 --bind 0.0.0.0:8000 FireProject.wsgi:application"
        expose:
            - "8000"
        depends_on:
            - redis
            - postgres
        env_file:
            .env
        environment:
            SECRET_KEY: "${SECRET_KEY}"
            ACCESS_SECRET_KEY: "${ACCESS_SECRET_KEY}"
        
            DEBUG: "${DEBUG}"
          
            BROKER_URL: "redis://redis:6379/0"

            NAME_DB: "${NAME_DB}" 
            USER_DB: "${USER_DB}" 
            PASSWORD_DB: "${PASSWORD_DB}" 
            HOST_DB: "postgres" 
            PORT_DB: "${POST_DB}"

    postgres:
        image: postgres
        restart: unless-stopped
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
        ports:
            - "5432:5432"
       # env_file:
       #     - .env
        environment:
            PGDATA: /var/lib/postgresql/data/

        #    - POSTGRES_USER=someuser
        #    - POSTGRES_PASSWORD=changeme
         #   - POSTGRES_DB=database
          #  - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
            #PGUSER: "${USER_DB}"
            #POSTGRES_PASSWORD: "${PASSWORD_DB}"
            #POSTGRES_DB: "${NAME_DB}" 
            #POSTGRES_USER: "${USER_DB}" 
            #POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
      
volumes:
    postgres-db-volume:
        external: true
        name: pg-data-test

